[1/10] Building C object esp-idf/main/CMakeFiles/__idf_main.dir/example_oledScreen.c.obj
/home/aspect/esp/example_oledScreen/main/example_oledScreen.c: In function 'app_main':
/home/aspect/esp/example_oledScreen/main/example_oledScreen.c:19:38: warning: multi-character literal with 5 characters exceeds 'int' size of 4 bytes
   19 |         OLEDscreen_draw_number(0, 0, 'hello');
      |                                      ^~~~~~~
[2/10] Performing build step for 'bootloader'
[1/1] cd /home/aspect/esp/example_oledScreen/build/bootloader/esp-idf/esptool_py && /home/aspect/.espressif/python_env/idf5.4_py3.13_env/bin/python /home/aspect/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 bootloader 0x1000 /home/aspect/esp/example_oledScreen/build/bootloader/bootloader.bin
Bootloader binary size 0x6580 bytes. 0xa80 bytes (9%) free.
[3/10] No install step for 'bootloader'
[4/10] Linking C static library esp-idf/main/libmain.a
[5/10] Completed 'bootloader'
[6/10] Generating ld/sections.ld
[7/10] Linking CXX executable example_oledScreen.elf
[8/10] Generating binary image from built executable
esptool.py v4.8.1
Creating esp32 image...
Merged 2 ELF sections
Successfully created esp32 image.
Generated /home/aspect/esp/example_oledScreen/build/example_oledScreen.bin
[9/10] cd /home/aspect/esp/example_oledScreen/build/esp-idf/esptool_py && /home/aspect/.espressif/python_env/idf5.4_py3.13_env/bin/python /home/aspect/esp/esp-idf/components/partition_table/check_sizes.py --offset 0x8000 partition --type app /home/aspect/esp/example_oledScreen/build/partition_table/partition-table.bin /home/aspect/esp/example_oledScreen/build/example_oledScreen.bin
example_oledScreen.bin binary size 0x342b0 bytes. Smallest app partition is 0x100000 bytes. 0xcbd50 bytes (80%) free.
[9/10] cd /home/aspect/esp/esp-idf/components/esptool_py && /usr/bin/cmake -D IDF_PATH=/home/aspect/esp/esp-idf -D "SERIAL_TOOL=/home/aspect/.espressif/python_env/idf5.4_py3.13_env/bin/python;;/home/aspect/esp/esp-idf/components/esptool_py/esptool/esptool.py;--chip;esp32" -D "SERIAL_TOOL_ARGS=--before=default_reset;--after=hard_reset;write_flash;@flash_args" -D WORKING_DIRECTORY=/home/aspect/esp/example_oledScreen/build -P /home/aspect/esp/esp-idf/components/esptool_py/run_serial_tool.cmake
esptool.py --chip esp32 -p /dev/ttyUSB0 -b 460800 --before=default_reset --after=hard_reset write_flash --flash_mode dio --flash_freq 40m --flash_size 2MB 0x1000 bootloader/bootloader.bin 0x10000 example_oledScreen.bin 0x8000 partition_table/partition-table.bin
esptool.py v4.8.1
Serial port /dev/ttyUSB0
Connecting.......
Chip is ESP32-D0WD (revision v1.0)
Features: WiFi, BT, Dual Core, 240MHz, VRef calibration in efuse, Coding Scheme None
Crystal is 40MHz
MAC: bc:dd:c2:d0:d2:5c
Uploading stub...
Running stub...
Stub running...
Changing baud rate to 460800
Changed.
Configuring flash size...
Flash will be erased from 0x00001000 to 0x00007fff...
Flash will be erased from 0x00010000 to 0x00044fff...
Flash will be erased from 0x00008000 to 0x00008fff...
SHA digest in image updated
Compressed 25984 bytes to 16376...
Writing at 0x00001000... (100 %)
Wrote 25984 bytes (16376 compressed) at 0x00001000 in 0.6 seconds (effective 341.7 kbit/s)...
Hash of data verified.
Compressed 213680 bytes to 111523...
Writing at 0x00010000... (14 %)
Writing at 0x0001ce0b... (28 %)
Writing at 0x00022d11... (42 %)
Writing at 0x00028d36... (57 %)
Writing at 0x000316e9... (71 %)
Writing at 0x00039227... (85 %)
Writing at 0x0003f0de... (100 %)
Wrote 213680 bytes (111523 compressed) at 0x00010000 in 3.0 seconds (effective 568.5 kbit/s)...
Hash of data verified.
Compressed 3072 bytes to 103...
Writing at 0x00008000... (100 %)
Wrote 3072 bytes (103 compressed) at 0x00008000 in 0.0 seconds (effective 872.0 kbit/s)...
Hash of data verified.

Leaving...
Hard resetting via RTS pin...
